<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Ticket extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Ticket_model');
    } 

    /*
     * Listing of ticket
     */
    function index()
    {
        $data['ticket'] = $this->Ticket_model->get_all_ticket();

        $data['_view'] = 'ticket/index';
        $this->load->view('layouts/main',$data);
    }
    
    function reserv()
    {
        $data['ticket'] = $this->Ticket_model->get_all_ticket();
        $data['cate'] = $this->Ticket_model->get_categories_all();

        $data['_view'] = 'ticket/product';
        $this->load->view('layouts/main',$data);
    }

    
    function select($id)
    {   
        //$categories_id = isset($_POST['categories']) ? $_POST['categories'] : "";

        //$categories_id = isset($_POST['categories']) ? $_POST['categories'] : "";
        
        //$Query = $this->Ticket_model->get_categories($categories_id);
        $Query = $this->db->query("SELECT * FROM ml_products WHERE categories_id= '$id'  ");



        //$Query = mysql_query("SELECT * FROM ml_products WHERE categories_id='{$categorie_id}'");
        //mysql_query('SET NAMES UTF8');

            /*$Rows = mysql_num_rows($Query);
                if ($Rows > 0) {
                    while ($Result = mysql_fetch_array($Query)) {
                        echo "<option value=\"" . $Result['id'] . "\">" . $Result['product_name'] . "</option>";
                    }
            }else{
                        echo "<option value=\"\">ไม่มีสินค้าในหมวดหมู่ที่เลือก</option>";
            }
            */
            $row = $Query->row();

if (isset($row))
{
        //echo $row->id;
        //echo $row->product_name;
        $ar=array(

            "id"            =>$row->id,
            "product_name"  =>$row->product_name

            );
            echo json_encode($ar);
}

            /*
            $ar=array(

            "id"            =>$Query->id,
            "product_name"  =>$Query->product_name

            );
            echo json_encode($ar);
            */
            
    }
    
    /*
     * Adding a new ticket
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name_ticket','Name Ticket','required');
		$this->form_validation->set_rules('price_kid','Price Kid','required|numeric');
		$this->form_validation->set_rules('price_adult','Price Adult','required|numeric');
		$this->form_validation->set_rules('price_older','Price Older','required|numeric');
		$this->form_validation->set_rules('detail_ticket','Detail Ticket','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'name_ticket' => $this->input->post('name_ticket'),
				'price_kid' => $this->input->post('price_kid'),
				'price_adult' => $this->input->post('price_adult'),
				'price_older' => $this->input->post('price_older'),
				'detail_ticket' => $this->input->post('detail_ticket'),
            );
            
            $ticket_id = $this->Ticket_model->add_ticket($params);
            redirect('ticket/index');
        }
        else
        {            
            $data['_view'] = 'ticket/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a ticket
     */
    function edit($id_ticket)
    {   
        // check if the ticket exists before trying to edit it
        $data['ticket'] = $this->Ticket_model->get_ticket($id_ticket);
        
        if(isset($data['ticket']['id_ticket']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('name_ticket','Name Ticket','required');
			$this->form_validation->set_rules('price_kid','Price Kid','required|numeric');
			$this->form_validation->set_rules('price_adult','Price Adult','required|numeric');
			$this->form_validation->set_rules('price_older','Price Older','required|alpha_numeric');
			$this->form_validation->set_rules('detail_ticket','Detail Ticket','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'name_ticket' => $this->input->post('name_ticket'),
					'price_kid' => $this->input->post('price_kid'),
					'price_adult' => $this->input->post('price_adult'),
					'price_older' => $this->input->post('price_older'),
					'detail_ticket' => $this->input->post('detail_ticket'),
                );

                $this->Ticket_model->update_ticket($id_ticket,$params);            
                redirect('ticket/index');
            }
            else
            {
                $data['_view'] = 'ticket/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The ticket you are trying to edit does not exist.');
    } 

    /*
     * Deleting ticket
     */
    function remove($id_ticket)
    {
        $ticket = $this->Ticket_model->get_ticket($id_ticket);

        // check if the ticket exists before trying to delete it
        if(isset($ticket['id_ticket']))
        {
            $this->Ticket_model->delete_ticket($id_ticket);
            redirect('ticket/index');
        }
        else
            show_error('The ticket you are trying to delete does not exist.');
    }
    
}
